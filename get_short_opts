#!/bin/bash
set -x
#set -e


get_os_info () {
    if [ "$DIR_PATH" != "/dev/null" ];
    then
        DIR_PATH_INFO=$($DIR_PATH/info)
    else
        echo "cannot create directory "$DIR_PATH": File exists"
        DIR_PATH_INFO=$DIR_PATH
    fi
    uname -a | tee $DIR_PATH_INFO
    cat /etc/lsb-release | tee -a $DIR_PATH_INFO
}


get_disks_info () {
    if [ "$DIR_PATH" != "/dev/null" ];
    then
        DIR_PATH_DISK=$($DIR_PATH/info)
    else
        echo "cannot create directory "$DIR_PATH": File exists"
        DIR_PATH_DISK=$DIR_PATH
    fi
    df -h | tee $DIR_PATH_DISK
    lsblk | tee -a $DIR_PATH_DISK
    cat /etc/fstab | tee -a $DIR_PATH_DISK
    sudo fdisk -x /dev/sda | tee -a $DIR_PATH_DISK
    sudo du -ch --max-depth=1 / 2> /dev/null | tee -a $DIR_PATH_DISK
}


get_cpu_info () {
    if [ "$DIR_PATH" != "/dev/null" ];
    then
        DIR_PATH_CPU=$($DIR_PATH/info)
    else
        echo "cannot create directory "$DIR_PATH": File exists"
        DIR_PATH_CPU=$DIR_PATH
    fi
    cat /proc/cpuinfo | tee -a $DIR_PATH_CPU
    top -n 1 | head -n 5 | tee -a $DIR_PATH_CPU
}


zip_vm_stat () {
    sudo tar cfz report.tar.gz $DIR_PATH/
}


usage () {
    echo "Enter the right PATH.\nExample of usage: sh script1.sh -p PATH_TO_DEST_DIR -a\n\nArguments and options:\n-p, required
       - PATH to destination directory.\n-a, optional              - option to compese destination directory."
}


SHORT=p:a

while getopts $SHORT params; do
    case $params in
        p)
            if [ -n "$OPTARG" ];
            then
                DIR_PATH=$OPTARG
            fi
            ;;
        a)
            ARCHIVE=true
            ;;
        ?)
            usage
            exit1
            ;;
    esac
done

if [ -n "$DIR_PATH" ];
    then
        mkdir -p $DIR_PATH
        get_os_info && get_disks_info && get_cpu_info
        if [ "$ARCHIVE" = true ];
        then
            zip_vm_stat
        fi
else
    DIR_PATH=/dev/null
    if [ $? -eq 0 ];
        then
        get_os_info && get_disks_info && get_cpu_info
    fi
fi
